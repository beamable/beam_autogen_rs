/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaSuggestedIndex {
    #[serde(rename = "weight")]
    pub weight: String,
    #[serde(rename = "impact")]
    pub impact: Vec<String>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "namespace")]
    pub namespace: String,
    #[serde(rename = "index")]
    pub index: Vec<String>,
}

impl PaSuggestedIndex {
    pub fn new(weight: String, impact: Vec<String>, id: String, namespace: String, index: Vec<String>) -> PaSuggestedIndex {
        PaSuggestedIndex {
            weight,
            impact,
            id,
            namespace,
            index,
        }
    }
}

