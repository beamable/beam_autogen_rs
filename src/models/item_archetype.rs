/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemArchetype {
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "external", skip_serializing_if = "Option::is_none")]
    pub external: Option<Box<models::FederationInfo>>,
    #[serde(rename = "clientPermission", skip_serializing_if = "Option::is_none")]
    pub client_permission: Option<Box<models::ClientPermission>>,
}

impl ItemArchetype {
    pub fn new(symbol: String) -> ItemArchetype {
        ItemArchetype {
            symbol,
            external: None,
            client_permission: None,
        }
    }
}

