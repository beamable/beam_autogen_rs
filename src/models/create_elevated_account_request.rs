/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateElevatedAccountRequest {
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<String>,
    #[serde(rename = "initProperties", skip_serializing_if = "Option::is_none")]
    pub init_properties: Option<std::collections::HashMap<String, String>>,
}

impl CreateElevatedAccountRequest {
    pub fn new(email: String) -> CreateElevatedAccountRequest {
        CreateElevatedAccountRequest {
            email,
            role: None,
            init_properties: None,
        }
    }
}

