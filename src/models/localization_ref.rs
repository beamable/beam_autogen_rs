/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LocalizationRef {
    #[serde(rename = "localizationId")]
    pub localization_id: String,
    #[serde(rename = "defaultValue", skip_serializing_if = "Option::is_none")]
    pub default_value: Option<String>,
    #[serde(rename = "empty")]
    pub empty: bool,
}

impl LocalizationRef {
    pub fn new(localization_id: String, empty: bool) -> LocalizationRef {
        LocalizationRef {
            localization_id,
            default_value: None,
            empty,
        }
    }
}

