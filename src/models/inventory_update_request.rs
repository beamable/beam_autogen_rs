/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InventoryUpdateRequest {
    #[serde(rename = "currencies", skip_serializing_if = "Option::is_none")]
    pub currencies: Option<std::collections::HashMap<String, i64>>,
    #[serde(rename = "currencyProperties", skip_serializing_if = "Option::is_none")]
    pub currency_properties: Option<std::collections::HashMap<String, Vec<models::CurrencyProperty>>>,
    #[serde(rename = "applyVipBonus", skip_serializing_if = "Option::is_none")]
    pub apply_vip_bonus: Option<bool>,
    #[serde(rename = "updateItems", skip_serializing_if = "Option::is_none")]
    pub update_items: Option<Vec<models::ItemUpdateRequest>>,
    #[serde(rename = "newItems", skip_serializing_if = "Option::is_none")]
    pub new_items: Option<Vec<models::ItemCreateRequest>>,
    #[serde(rename = "transaction", skip_serializing_if = "Option::is_none")]
    pub transaction: Option<String>,
    #[serde(rename = "deleteItems", skip_serializing_if = "Option::is_none")]
    pub delete_items: Option<Vec<models::ItemDeleteRequest>>,
}

impl InventoryUpdateRequest {
    pub fn new() -> InventoryUpdateRequest {
        InventoryUpdateRequest {
            currencies: None,
            currency_properties: None,
            apply_vip_bonus: None,
            update_items: None,
            new_items: None,
            transaction: None,
            delete_items: None,
        }
    }
}

