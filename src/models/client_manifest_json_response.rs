/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientManifestJsonResponse {
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(rename = "entries")]
    pub entries: Vec<models::ClientContentInfoJson>,
    #[serde(rename = "publisherAccountId", skip_serializing_if = "Option::is_none")]
    pub publisher_account_id: Option<i64>,
}

impl ClientManifestJsonResponse {
    pub fn new(entries: Vec<models::ClientContentInfoJson>) -> ClientManifestJsonResponse {
        ClientManifestJsonResponse {
            uid: None,
            entries,
            publisher_account_id: None,
        }
    }
}

