/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SupportedFederation {
    #[serde(rename = "type")]
    pub r#type: models::FederationType,
    #[serde(rename = "nameSpace", skip_serializing_if = "Option::is_none")]
    pub name_space: Option<String>,
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<Box<models::OptionalJsonNodeWrapper>>,
}

impl SupportedFederation {
    pub fn new(r#type: models::FederationType) -> SupportedFederation {
        SupportedFederation {
            r#type,
            name_space: None,
            settings: None,
        }
    }
}

