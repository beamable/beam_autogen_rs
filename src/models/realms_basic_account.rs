/*
 * Beamable API
 *
 * Autogenerated Beamable API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@beamable.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RealmsBasicAccount {
    #[serde(rename = "user")]
    pub user: String,
    #[serde(rename = "password")]
    pub password: String,
    #[serde(rename = "projects")]
    pub projects: Vec<String>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i64>,
}

impl RealmsBasicAccount {
    pub fn new(user: String, password: String, projects: Vec<String>) -> RealmsBasicAccount {
        RealmsBasicAccount {
            user,
            password,
            projects,
            created: None,
        }
    }
}

